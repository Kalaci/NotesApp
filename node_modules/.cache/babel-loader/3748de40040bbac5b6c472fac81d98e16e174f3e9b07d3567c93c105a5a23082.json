{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bootcamp\\\\NoteA\\\\NotesApp\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport './Main.css';\nimport React, { useState, useEffect } from 'react';\nimport NoteForm from '../notes/NoteForm';\nimport NoteList from '../notes/NotesList';\nimport NewNoteButton from '../notes/NewNoteButton';\nimport NoteButtons from '../notes/NoteButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [showButtons, setShowButtons] = useState(false);\n  const [updateButtons, setUpdateButtons] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/todos', {\n          mode: 'no-cors'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok1');\n        }\n        const data = await response.json();\n        setNotes(data);\n        notes.forEach(note => {\n          console.log(note.title);\n        });\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleNewNoteBtn = () => {\n    setNoteContent('');\n    setNoteTitle('');\n    setShowButtons(true);\n    setUpdateButtons(false);\n    setShowFields(true);\n  };\n  const handleDeleteBtnNew = () => {\n    setShowButtons(false);\n    setShowFields(false);\n  };\n  const handleAddBtn = () => {\n    const newNote = {\n      title: noteTitle,\n      content: noteContent\n    };\n    setNotes([...notes, newNote]);\n    setShowButtons(!showButtons);\n    setShowFields(!showFields);\n  };\n  const openNote = note => {\n    setShowButtons(false);\n    setShowFields(true);\n    setSelectedNote(note);\n    const title = note.title;\n    const content = note.content;\n    setNoteTitle(title);\n    setNoteContent(content);\n    setUpdateButtons(!updateButtons);\n  };\n  const handleDeleteBtnUpdate = () => {\n    const removedNote = notes.filter(note => note !== selectedNote);\n    setNotes(removedNote);\n    setUpdateButtons(!updateButtons);\n    setShowFields(!showFields);\n  };\n  const handleUpdateButton = () => {\n    const updatedNotes = notes.map(note => note === selectedNote ? {\n      ...note,\n      title: noteTitle,\n      content: noteContent\n    } : note);\n    setNotes(updatedNotes);\n    setNoteTitle('');\n    setNoteContent('');\n    setSelectedNote(null);\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleTitle = e => {\n    setNoteTitle(e.target.value);\n  };\n  const handleContent = e => {\n    setNoteContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(NewNoteButton, {\n        onClick: handleNewNoteBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), showFields && /*#__PURE__*/_jsxDEV(NoteForm, {\n        title: noteTitle,\n        content: noteContent,\n        onTitleChange: handleTitle,\n        onContentChange: handleContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteButtons, {\n        onAdd: handleAddBtn,\n        onDeleteNew: handleDeleteBtnNew,\n        onUpdate: handleUpdateButton,\n        onDeleteUpdate: handleDeleteBtnUpdate,\n        showAdd: showButtons,\n        showUpdate: updateButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"notedHeader\",\n        children: \" TO DO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes,\n        onSelect: openNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"wUMcCkXvvNsVJt4zPrWScEzJys0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","NoteForm","NoteList","NewNoteButton","NoteButtons","jsxDEV","_jsxDEV","Main","_s","showButtons","setShowButtons","updateButtons","setUpdateButtons","showFields","setShowFields","notes","setNotes","noteTitle","setNoteTitle","noteContent","setNoteContent","selectedNote","setSelectedNote","loading","setLoading","error","setError","fetchUsers","response","fetch","mode","ok","Error","data","json","forEach","note","console","log","title","err","message","handleNewNoteBtn","handleDeleteBtnNew","handleAddBtn","newNote","content","openNote","handleDeleteBtnUpdate","removedNote","filter","handleUpdateButton","updatedNotes","map","handleTitle","e","target","value","handleContent","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTitleChange","onContentChange","onAdd","onDeleteNew","onUpdate","onDeleteUpdate","showAdd","showUpdate","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React Bootcamp/NoteA/NotesApp/src/components/main/Main.jsx"],"sourcesContent":["import './Main.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport NoteForm from '../notes/NoteForm';\r\nimport NoteList from '../notes/NotesList';\r\nimport NewNoteButton from '../notes/NewNoteButton';\r\nimport NoteButtons from '../notes/NoteButtons';\r\n\r\nfunction Main() {\r\n\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [updateButtons, setUpdateButtons] = useState(false);\r\n  const [showFields, setShowFields] = useState(false);\r\n  const [notes, setNotes] = useState([]);\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n  const [noteContent, setNoteContent] = useState('');\r\n  const [selectedNote, setSelectedNote ] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  \r\n  useEffect(()=>{\r\n\r\n    const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/todos', { mode: 'no-cors' }); \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok1');\r\n      }\r\n      const data = await response.json();\r\n      setNotes(data);\r\n      notes.forEach((note)=>{\r\n        console.log(note.title);\r\n      })\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleNewNoteBtn = () =>{\r\n    setNoteContent('');\r\n    setNoteTitle('');\r\n    setShowButtons(true);\r\n    setUpdateButtons(false); \r\n    setShowFields(true); \r\n  };\r\n\r\n  const handleDeleteBtnNew = () => {\r\n    setShowButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleAddBtn = () =>{\r\n      const newNote = {\r\n        title: noteTitle,\r\n        content: noteContent,\r\n      };\r\n\r\n      setNotes([...notes, newNote]);\r\n      setShowButtons(!showButtons);\r\n      setShowFields(!showFields);\r\n  };\r\n\r\n  const openNote = (note) => {\r\n    setShowButtons(false);\r\n    setShowFields(true);\r\n    setSelectedNote(note);\r\n\r\n    const title = note.title;\r\n    const content = note.content;\r\n\r\n    setNoteTitle(title);\r\n    setNoteContent(content);\r\n    setUpdateButtons(!updateButtons);\r\n\r\n  };\r\n\r\n  const handleDeleteBtnUpdate = () => {\r\n    \r\n    const removedNote = notes.filter( note => note !== selectedNote);\r\n    setNotes(removedNote);\r\n    \r\n    setUpdateButtons(!updateButtons);\r\n    setShowFields(!showFields);\r\n  };\r\n\r\n  const handleUpdateButton = () => {\r\n    const updatedNotes = notes.map(note => \r\n      note === selectedNote \r\n          ? { ...note, title: noteTitle, content: noteContent } \r\n          : note\r\n  );\r\n\r\n  setNotes(updatedNotes);\r\n\r\n  setNoteTitle('');\r\n  setNoteContent('');\r\n  setSelectedNote(null);\r\n  setUpdateButtons(false);\r\n  setShowFields(false);\r\n  }\r\n\r\n  const handleTitle = (e) => {\r\n    setNoteTitle(e.target.value);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    setNoteContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id='mainBody'>\r\n      <div id=\"notesSideBar\">\r\n         \r\n      <NewNoteButton onClick={handleNewNoteBtn} />\r\n\r\n        {showFields && (\r\n          <NoteForm\r\n            title={noteTitle}\r\n            content={noteContent}\r\n            onTitleChange={handleTitle}\r\n            onContentChange={handleContent}\r\n          />\r\n         )}\r\n        <NoteButtons\r\n          onAdd={handleAddBtn}\r\n          onDeleteNew={handleDeleteBtnNew}\r\n          onUpdate={handleUpdateButton}\r\n          onDeleteUpdate={handleDeleteBtnUpdate}\r\n          showAdd={showButtons}\r\n          showUpdate={updateButtons}\r\n        />\r\n\r\n      </div>\r\n      <div id=\"notesDashboard\">\r\n        <h1 id=\"notedHeader\"> TO DO </h1>\r\n        <NoteList notes={notes} onSelect={openNote} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}