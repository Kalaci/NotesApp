{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bootcamp\\\\NoteA\\\\NotesApp\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport './Main.css';\nimport React, { useState, useEffect } from 'react';\nimport NoteForm from '../notes/NoteForm';\nimport NoteList from '../notes/NotesList';\nimport NewNoteButton from '../notes/NewNoteButton';\nimport NoteButtons from '../notes/NoteButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [showButtons, setShowButtons] = useState(false);\n  const [updateButtons, setUpdateButtons] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n  const [todos, setTodos] = useState([]); // State for todos\n  const [todoTitle, settodoTitle] = useState('');\n  const [todoContent, settodoContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  //initial fetch\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/todos');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTodos(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTodos();\n  }, [todos]);\n  const handleNewNoteBtn = () => {\n    settodoContent('');\n    settodoTitle('');\n    setShowButtons(true);\n    setUpdateButtons(false);\n    setShowFields(true);\n  };\n  const handleDeleteBtnNew = () => {\n    setShowButtons(false);\n    setShowFields(false);\n  };\n  const handleAddBtn = async () => {\n    const newTodo = {\n      title: todoTitle,\n      content: todoContent\n    };\n    try {\n      const response = await fetch('http://localhost:5000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTodo)\n      });\n      const addedTodo = await response.json();\n      setTodos([...todos, addedTodo]);\n      setShowButtons(false);\n      setShowFields(false);\n      settodoTitle('');\n      settodoContent('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const openNote = todo => {\n    setShowButtons(false);\n    setShowFields(true);\n    setSelectedNote(todo);\n    settodoTitle(todo.title);\n    settodoContent(todo.content);\n    setUpdateButtons(true);\n  };\n  const handleDeleteBtnUpdate = () => {\n    const updatedTodos = todos.filter(todo => todo !== selectedNote);\n    setTodos(updatedTodos);\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleUpdateButton = () => {\n    const updatedTodos = todos.map(todo => todo === selectedNote ? {\n      ...todo,\n      title: todoTitle,\n      content: todoContent\n    } : todo);\n    setTodos(updatedTodos);\n    settodoTitle('');\n    settodoContent('');\n    setSelectedNote(null);\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleTitle = e => {\n    settodoTitle(e.target.value);\n  };\n  const handleContent = e => {\n    settodoContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(NewNoteButton, {\n        onClick: handleNewNoteBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), showFields && /*#__PURE__*/_jsxDEV(NoteForm, {\n        title: todoTitle,\n        content: todoContent,\n        onTitleChange: handleTitle,\n        onContentChange: handleContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteButtons, {\n        onAdd: handleAddBtn,\n        onDeleteNew: handleDeleteBtnNew,\n        onUpdate: handleUpdateButton,\n        onDeleteUpdate: handleDeleteBtnUpdate,\n        showAdd: showButtons,\n        showUpdate: updateButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"notedHeader\",\n        children: \"TO DO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: todos,\n        onSelect: openNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"g4USA0F2iLnpFYSj4JFllrzOv8g=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","NoteForm","NoteList","NewNoteButton","NoteButtons","jsxDEV","_jsxDEV","Main","_s","showButtons","setShowButtons","updateButtons","setUpdateButtons","showFields","setShowFields","todos","setTodos","todoTitle","settodoTitle","todoContent","settodoContent","selectedNote","setSelectedNote","loading","setLoading","error","setError","fetchTodos","response","fetch","ok","Error","data","json","err","message","handleNewNoteBtn","handleDeleteBtnNew","handleAddBtn","newTodo","title","content","method","headers","body","JSON","stringify","addedTodo","console","openNote","todo","handleDeleteBtnUpdate","updatedTodos","filter","handleUpdateButton","map","handleTitle","e","target","value","handleContent","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTitleChange","onContentChange","onAdd","onDeleteNew","onUpdate","onDeleteUpdate","showAdd","showUpdate","notes","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React Bootcamp/NoteA/NotesApp/src/components/main/Main.jsx"],"sourcesContent":["import './Main.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport NoteForm from '../notes/NoteForm';\r\nimport NoteList from '../notes/NotesList';\r\nimport NewNoteButton from '../notes/NewNoteButton';\r\nimport NoteButtons from '../notes/NoteButtons';\r\n\r\nfunction Main() {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [updateButtons, setUpdateButtons] = useState(false);\r\n  const [showFields, setShowFields] = useState(false);\r\n  const [todos, setTodos] = useState([]); // State for todos\r\n  const [todoTitle, settodoTitle] = useState('');\r\n  const [todoContent, settodoContent] = useState('');\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  //initial fetch\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/todos'); \r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setTodos(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTodos();\r\n  }, [todos]);\r\n\r\n  const handleNewNoteBtn = () => {\r\n    settodoContent('');\r\n    settodoTitle('');\r\n    setShowButtons(true);\r\n    setUpdateButtons(false); \r\n    setShowFields(true); \r\n  };\r\n\r\n  const handleDeleteBtnNew = () => {\r\n    setShowButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleAddBtn = async () => {\r\n    const newTodo = {\r\n      title: todoTitle,\r\n      content: todoContent,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/todos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTodo),\r\n      });\r\n      \r\n      const addedTodo = await response.json();\r\n      setTodos([...todos, addedTodo]);\r\n      setShowButtons(false);\r\n      setShowFields(false);\r\n      settodoTitle('');\r\n      settodoContent('');\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  const openNote = (todo) => {\r\n    setShowButtons(false);\r\n    setShowFields(true);\r\n    setSelectedNote(todo);\r\n    settodoTitle(todo.title);\r\n    settodoContent(todo.content);\r\n    setUpdateButtons(true);\r\n  };\r\n\r\n  const handleDeleteBtnUpdate = () => {\r\n    const updatedTodos = todos.filter(todo => todo !== selectedNote);\r\n    setTodos(updatedTodos);\r\n    setUpdateButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleUpdateButton = () => {\r\n    const updatedTodos = todos.map(todo => \r\n      todo === selectedNote \r\n        ? { ...todo, title: todoTitle, content: todoContent } \r\n        : todo\r\n    );\r\n\r\n    setTodos(updatedTodos);\r\n    settodoTitle('');\r\n    settodoContent('');\r\n    setSelectedNote(null);\r\n    setUpdateButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    settodoTitle(e.target.value);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    settodoContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id='mainBody'>\r\n      <div id=\"notesSideBar\">\r\n        <NewNoteButton onClick={handleNewNoteBtn} />\r\n        {showFields && (\r\n          <NoteForm\r\n            title={todoTitle}\r\n            content={todoContent}\r\n            onTitleChange={handleTitle}\r\n            onContentChange={handleContent}\r\n          />\r\n        )}\r\n        <NoteButtons\r\n          onAdd={handleAddBtn}\r\n          onDeleteNew={handleDeleteBtnNew}\r\n          onUpdate={handleUpdateButton}\r\n          onDeleteUpdate={handleDeleteBtnUpdate}\r\n          showAdd={showButtons}\r\n          showUpdate={updateButtons}\r\n        />\r\n      </div>\r\n      <div id=\"notesDashboard\">\r\n        <h1 id=\"notedHeader\">TO DO</h1>\r\n        <NoteList notes={todos} onSelect={openNote} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}