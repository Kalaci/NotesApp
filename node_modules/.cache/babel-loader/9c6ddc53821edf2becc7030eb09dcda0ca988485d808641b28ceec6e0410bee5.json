{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bootcamp\\\\NoteA\\\\NotesApp\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport './Main.css';\nimport React, { useState, useEffect } from 'react';\nimport NoteForm from '../notes/NoteForm';\nimport NoteList from '../notes/NotesList';\nimport NewNoteButton from '../notes/NewNoteButton';\nimport NoteButtons from '../notes/NoteButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [showButtons, setShowButtons] = useState(false);\n  const [updateButtons, setUpdateButtons] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState();\n\n  // Fetch to-dos on component mount\n  useEffect(() => {\n    fetch('http://localhost:8080/todos').then(response => response.json()).then(data => {\n      setNotes(data); // Set the notes to the fetched to-dos\n    }).catch(error => {\n      console.error('There was an error fetching the todos!', error);\n    });\n  }, []);\n  const handleNewNoteBtn = () => {\n    setNoteContent('');\n    setNoteTitle('');\n    setShowButtons(true);\n    setUpdateButtons(false);\n    setShowFields(true);\n  };\n  const handleDeleteBtnNew = () => {\n    setShowButtons(false);\n    setShowFields(false);\n  };\n  const handleAddBtn = () => {\n    const newNote = {\n      title: noteTitle,\n      content: noteContent\n    };\n    fetch('http://localhost:8080/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    }).then(response => response.json()).then(data => {\n      setNotes([...notes, data]); // Add the new note to the state\n    }).catch(error => {\n      console.error('There was an error adding the note!', error);\n    });\n    setShowButtons(!showButtons);\n    setShowFields(!showFields);\n  };\n  const openNote = note => {\n    setShowButtons(false);\n    setShowFields(true);\n    setSelectedNote(note);\n    setNoteTitle(note.title);\n    setNoteContent(note.content);\n    setUpdateButtons(!updateButtons);\n  };\n  const handleDeleteBtnUpdate = () => {\n    fetch(`http://localhost:8080/todos/${selectedNote.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      const remainingNotes = notes.filter(note => note.id !== selectedNote.id);\n      setNotes(remainingNotes); // Update the state after deleting the note\n    }).catch(error => {\n      console.error('There was an error deleting the note!', error);\n    });\n    setUpdateButtons(!updateButtons);\n    setShowFields(!showFields);\n  };\n  const handleUpdateButton = () => {\n    const updatedNote = {\n      ...selectedNote,\n      title: noteTitle,\n      content: noteContent\n    };\n    fetch(`http://localhost:8080/todos/${selectedNote.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedNote)\n    }).then(response => response.json()).then(data => {\n      const updatedNotes = notes.map(note => note.id === selectedNote.id ? data : note);\n      setNotes(updatedNotes); // Update the state with the updated note\n    }).catch(error => {\n      console.error('There was an error updating the note!', error);\n    });\n    setNoteTitle('');\n    setNoteContent('');\n    setSelectedNote(null);\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleTitle = e => {\n    setNoteTitle(e.target.value);\n  };\n  const handleContent = e => {\n    setNoteContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(NewNoteButton, {\n        onClick: handleNewNoteBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), showFields && /*#__PURE__*/_jsxDEV(NoteForm, {\n        title: noteTitle,\n        content: noteContent,\n        onTitleChange: handleTitle,\n        onContentChange: handleContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteButtons, {\n        onAdd: handleAddBtn,\n        onDeleteNew: handleDeleteBtnNew,\n        onUpdate: handleUpdateButton,\n        onDeleteUpdate: handleDeleteBtnUpdate,\n        showAdd: showButtons,\n        showUpdate: updateButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"notedHeader\",\n        children: \" TO DO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes,\n        onSelect: openNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"cd7uYm8G8MnobyHS4X8x1NBXhzI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","NoteForm","NoteList","NewNoteButton","NoteButtons","jsxDEV","_jsxDEV","Main","_s","showButtons","setShowButtons","updateButtons","setUpdateButtons","showFields","setShowFields","notes","setNotes","noteTitle","setNoteTitle","noteContent","setNoteContent","selectedNote","setSelectedNote","fetch","then","response","json","data","catch","error","console","handleNewNoteBtn","handleDeleteBtnNew","handleAddBtn","newNote","title","content","method","headers","body","JSON","stringify","openNote","note","handleDeleteBtnUpdate","id","remainingNotes","filter","handleUpdateButton","updatedNote","updatedNotes","map","handleTitle","e","target","value","handleContent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTitleChange","onContentChange","onAdd","onDeleteNew","onUpdate","onDeleteUpdate","showAdd","showUpdate","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React Bootcamp/NoteA/NotesApp/src/components/main/Main.jsx"],"sourcesContent":["import './Main.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport NoteForm from '../notes/NoteForm';\r\nimport NoteList from '../notes/NotesList';\r\nimport NewNoteButton from '../notes/NewNoteButton';\r\nimport NoteButtons from '../notes/NoteButtons';\r\n\r\nfunction Main() {\r\n\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [updateButtons, setUpdateButtons] = useState(false);\r\n  const [showFields, setShowFields] = useState(false);\r\n  const [notes, setNotes] = useState([]);\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n  const [noteContent, setNoteContent] = useState('');\r\n  const [selectedNote, setSelectedNote] = useState();\r\n\r\n  // Fetch to-dos on component mount\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/todos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setNotes(data);  // Set the notes to the fetched to-dos\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the todos!', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleNewNoteBtn = () => {\r\n    setNoteContent('');\r\n    setNoteTitle('');\r\n    setShowButtons(true);\r\n    setUpdateButtons(false); \r\n    setShowFields(true); \r\n  };\r\n\r\n  const handleDeleteBtnNew = () => {\r\n    setShowButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleAddBtn = () => {\r\n    const newNote = {\r\n      title: noteTitle,\r\n      content: noteContent,\r\n    };\r\n\r\n    fetch('http://localhost:8080/todos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newNote),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setNotes([...notes, data]);  // Add the new note to the state\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error adding the note!', error);\r\n    });\r\n\r\n    setShowButtons(!showButtons);\r\n    setShowFields(!showFields);\r\n  };\r\n\r\n  const openNote = (note) => {\r\n    setShowButtons(false);\r\n    setShowFields(true);\r\n    setSelectedNote(note);\r\n\r\n    setNoteTitle(note.title);\r\n    setNoteContent(note.content);\r\n    setUpdateButtons(!updateButtons);\r\n  };\r\n\r\n  const handleDeleteBtnUpdate = () => {\r\n    fetch(`http://localhost:8080/todos/${selectedNote.id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    .then(() => {\r\n      const remainingNotes = notes.filter(note => note.id !== selectedNote.id);\r\n      setNotes(remainingNotes);  // Update the state after deleting the note\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error deleting the note!', error);\r\n    });\r\n\r\n    setUpdateButtons(!updateButtons);\r\n    setShowFields(!showFields);\r\n  };\r\n\r\n  const handleUpdateButton = () => {\r\n    const updatedNote = {\r\n      ...selectedNote,\r\n      title: noteTitle,\r\n      content: noteContent,\r\n    };\r\n\r\n    fetch(`http://localhost:8080/todos/${selectedNote.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedNote),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const updatedNotes = notes.map(note =>\r\n        note.id === selectedNote.id ? data : note\r\n      );\r\n      setNotes(updatedNotes);  // Update the state with the updated note\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error updating the note!', error);\r\n    });\r\n\r\n    setNoteTitle('');\r\n    setNoteContent('');\r\n    setSelectedNote(null);\r\n    setUpdateButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    setNoteTitle(e.target.value);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    setNoteContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id='mainBody'>\r\n      <div id=\"notesSideBar\">\r\n        <NewNoteButton onClick={handleNewNoteBtn} />\r\n        {showFields && (\r\n          <NoteForm\r\n            title={noteTitle}\r\n            content={noteContent}\r\n            onTitleChange={handleTitle}\r\n            onContentChange={handleContent}\r\n          />\r\n        )}\r\n        <NoteButtons\r\n          onAdd={handleAddBtn}\r\n          onDeleteNew={handleDeleteBtnNew}\r\n          onUpdate={handleUpdateButton}\r\n          onDeleteUpdate={handleDeleteBtnUpdate}\r\n          showAdd={showButtons}\r\n          showUpdate={updateButtons}\r\n        />\r\n      </div>\r\n      <div id=\"notesDashboard\">\r\n        <h1 id=\"notedHeader\"> TO DO </h1>\r\n        <NoteList notes={notes} onSelect={openNote} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}