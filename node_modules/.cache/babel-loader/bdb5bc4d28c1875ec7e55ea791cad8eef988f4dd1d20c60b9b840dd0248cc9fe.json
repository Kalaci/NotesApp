{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bootcamp\\\\notes-app\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport './Main.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [showButtons, setShowButtons] = useState(false);\n  const [notes, setNotes] = useState([]); // Store notes in a state array\n  const [noteTitle, setNoteTitle] = useState(''); // Title input state\n  const [noteContent, setNoteContent] = useState(''); // Content input state\n\n  const handleNewNoteBtn = () => {\n    setShowButtons(!showButtons);\n  };\n  const handleAddNote = () => {\n    const newNote = {\n      title: noteTitle,\n      content: noteContent\n    };\n    setNotes([...notes, newNote]); // Add new note to notes array\n    setNoteTitle(''); // Clear the title input\n    setNoteContent(''); // Clear the content input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"newNote\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"newNoteBtn\",\n          onClick: handleNewNoteBtn,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), showButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"noteInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            placeholder: \"Enter title\",\n            value: noteTitle,\n            onChange: e => setNoteTitle(e.target.value) // Update title input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            placeholder: \"Enter text\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value) // Update content input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttonClass\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"notedHeader\",\n        children: \"NOTES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notesList\",\n        children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"note\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n            id: \"noteTitle\",\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            id: \"noteContent\",\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"6H4b9knCjsiJ6x7X2tRKMTUGM30=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","showButtons","setShowButtons","notes","setNotes","noteTitle","setNoteTitle","noteContent","setNoteContent","handleNewNoteBtn","handleAddNote","newNote","title","content","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","note","index","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React Bootcamp/notes-app/src/components/main/Main.jsx"],"sourcesContent":["import './Main.css';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Main() {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [notes, setNotes] = useState([]); // Store notes in a state array\r\n  const [noteTitle, setNoteTitle] = useState(''); // Title input state\r\n  const [noteContent, setNoteContent] = useState(''); // Content input state\r\n\r\n  const handleNewNoteBtn = () => {\r\n    setShowButtons(!showButtons);\r\n  };\r\n\r\n  const handleAddNote = () => {\r\n    const newNote = {\r\n      title: noteTitle,\r\n      content: noteContent,\r\n    };\r\n    setNotes([...notes, newNote]); // Add new note to notes array\r\n    setNoteTitle(''); // Clear the title input\r\n    setNoteContent(''); // Clear the content input\r\n  };\r\n\r\n  return (\r\n    <div id='mainBody'>\r\n      <div id=\"notesSideBar\">\r\n        <div id=\"newNote\">\r\n          <button id=\"newNoteBtn\" onClick={handleNewNoteBtn}>\r\n            <span>+</span>\r\n          </button>\r\n        </div>\r\n\r\n        {showButtons && (\r\n          <div>\r\n            <div id=\"noteInfo\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                placeholder=\"Enter title\"\r\n                value={noteTitle}\r\n                onChange={(e) => setNoteTitle(e.target.value)} // Update title input\r\n              />\r\n              <textarea\r\n                id=\"text\"\r\n                placeholder=\"Enter text\"\r\n                value={noteContent}\r\n                onChange={(e) => setNoteContent(e.target.value)} // Update content input\r\n              />\r\n            </div>\r\n\r\n            <div id=\"buttonClass\">\r\n              <button onClick={handleAddNote}>Add Note</button>\r\n              <button>Delete</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div id=\"notesDashboard\">\r\n        <h1 id=\"notedHeader\">NOTES</h1>\r\n        <div id=\"notesList\">\r\n          {notes.map((note, index) => (\r\n            <div id=\"note\" key={index}> {/* Add key to each note */}\r\n              <h5 id=\"noteTitle\">{note.title}</h5>\r\n              <h6 id=\"noteContent\">{note.content}</h6>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}