{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bootcamp\\\\NoteA\\\\NotesApp\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport './Main.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport NoteForm from '../notes/NoteForm';\nimport NoteList from '../notes/NotesList';\nimport NewNoteButton from '../notes/NewNoteButton';\nimport NoteButtons from '../notes/NoteButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [showButtons, setShowButtons] = useState(false);\n  const [updateButtons, setUpdateButtons] = useState(false);\n  const [showFields, setShowFields] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState();\n\n  // Fetch existing notes on component mount\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/todos');\n        setNotes(response.data);\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNewNoteBtn = () => {\n    setNoteContent('');\n    setNoteTitle('');\n    setShowButtons(true);\n    setUpdateButtons(false);\n    setShowFields(true);\n  };\n  const handleDeleteBtnNew = () => {\n    setShowButtons(false);\n    setShowFields(false);\n  };\n  const handleAddBtn = async () => {\n    const newNote = {\n      title: noteTitle,\n      content: noteContent\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/todos', newNote);\n      setNotes([...notes, response.data]); // Update notes with the new note from response\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n    setShowButtons(false);\n    setShowFields(false);\n  };\n  const openNote = note => {\n    setShowButtons(false);\n    setShowFields(true);\n    setSelectedNote(note);\n    setNoteTitle(note.title);\n    setNoteContent(note.content);\n    setUpdateButtons(true);\n  };\n  const handleDeleteBtnUpdate = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${selectedNote.id}`); // Assuming each note has an 'id' property\n      const updatedNotes = notes.filter(note => note.id !== selectedNote.id);\n      setNotes(updatedNotes);\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleUpdateButton = async () => {\n    const updatedNote = {\n      title: noteTitle,\n      content: noteContent\n    };\n    try {\n      await axios.patch(`http://localhost:8080/todos/${selectedNote.id}`, updatedNote);\n      const updatedNotes = notes.map(note => note.id === selectedNote.id ? {\n        ...note,\n        title: noteTitle,\n        content: noteContent\n      } : note);\n      setNotes(updatedNotes);\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n    setNoteTitle('');\n    setNoteContent('');\n    setSelectedNote(null);\n    setUpdateButtons(false);\n    setShowFields(false);\n  };\n  const handleTitle = e => {\n    setNoteTitle(e.target.value);\n  };\n  const handleContent = e => {\n    setNoteContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(NewNoteButton, {\n        onClick: handleNewNoteBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), showFields && /*#__PURE__*/_jsxDEV(NoteForm, {\n        title: noteTitle,\n        content: noteContent,\n        onTitleChange: handleTitle,\n        onContentChange: handleContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteButtons, {\n        onAdd: handleAddBtn,\n        onDeleteNew: handleDeleteBtnNew,\n        onUpdate: handleUpdateButton,\n        onDeleteUpdate: handleDeleteBtnUpdate,\n        showAdd: showButtons,\n        showUpdate: updateButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"notedHeader\",\n        children: \" TO DO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes,\n        onSelect: openNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"cd7uYm8G8MnobyHS4X8x1NBXhzI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","NoteForm","NoteList","NewNoteButton","NoteButtons","jsxDEV","_jsxDEV","Main","_s","showButtons","setShowButtons","updateButtons","setUpdateButtons","showFields","setShowFields","notes","setNotes","noteTitle","setNoteTitle","noteContent","setNoteContent","selectedNote","setSelectedNote","fetchNotes","response","get","data","error","console","handleNewNoteBtn","handleDeleteBtnNew","handleAddBtn","newNote","title","content","post","openNote","note","handleDeleteBtnUpdate","delete","id","updatedNotes","filter","handleUpdateButton","updatedNote","patch","map","handleTitle","e","target","value","handleContent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTitleChange","onContentChange","onAdd","onDeleteNew","onUpdate","onDeleteUpdate","showAdd","showUpdate","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React Bootcamp/NoteA/NotesApp/src/components/main/Main.jsx"],"sourcesContent":["import './Main.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\nimport NoteForm from '../notes/NoteForm';\r\nimport NoteList from '../notes/NotesList';\r\nimport NewNoteButton from '../notes/NewNoteButton';\r\nimport NoteButtons from '../notes/NoteButtons';\r\n\r\nfunction Main() {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [updateButtons, setUpdateButtons] = useState(false);\r\n  const [showFields, setShowFields] = useState(false);\r\n  const [notes, setNotes] = useState([]);\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n  const [noteContent, setNoteContent] = useState('');\r\n  const [selectedNote, setSelectedNote] = useState();\r\n\r\n  // Fetch existing notes on component mount\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/todos');\r\n        setNotes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notes:', error);\r\n      }\r\n    };\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const handleNewNoteBtn = () => {\r\n    setNoteContent('');\r\n    setNoteTitle('');\r\n    setShowButtons(true);\r\n    setUpdateButtons(false);\r\n    setShowFields(true);\r\n  };\r\n\r\n  const handleDeleteBtnNew = () => {\r\n    setShowButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleAddBtn = async () => {\r\n    const newNote = {\r\n      title: noteTitle,\r\n      content: noteContent,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/todos', newNote);\r\n      setNotes([...notes, response.data]); // Update notes with the new note from response\r\n    } catch (error) {\r\n      console.error('Error adding note:', error);\r\n    }\r\n\r\n    setShowButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const openNote = (note) => {\r\n    setShowButtons(false);\r\n    setShowFields(true);\r\n    setSelectedNote(note);\r\n    setNoteTitle(note.title);\r\n    setNoteContent(note.content);\r\n    setUpdateButtons(true);\r\n  };\r\n\r\n  const handleDeleteBtnUpdate = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/todos/${selectedNote.id}`); // Assuming each note has an 'id' property\r\n      const updatedNotes = notes.filter(note => note.id !== selectedNote.id);\r\n      setNotes(updatedNotes);\r\n    } catch (error) {\r\n      console.error('Error deleting note:', error);\r\n    }\r\n\r\n    setUpdateButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleUpdateButton = async () => {\r\n    const updatedNote = {\r\n      title: noteTitle,\r\n      content: noteContent,\r\n    };\r\n\r\n    try {\r\n      await axios.patch(`http://localhost:8080/todos/${selectedNote.id}`, updatedNote);\r\n      const updatedNotes = notes.map(note => \r\n        note.id === selectedNote.id \r\n          ? { ...note, title: noteTitle, content: noteContent } \r\n          : note\r\n      );\r\n      setNotes(updatedNotes);\r\n    } catch (error) {\r\n      console.error('Error updating note:', error);\r\n    }\r\n\r\n    setNoteTitle('');\r\n    setNoteContent('');\r\n    setSelectedNote(null);\r\n    setUpdateButtons(false);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    setNoteTitle(e.target.value);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    setNoteContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id='mainBody'>\r\n      <div id=\"notesSideBar\">\r\n        <NewNoteButton onClick={handleNewNoteBtn} />\r\n        {showFields && (\r\n          <NoteForm\r\n            title={noteTitle}\r\n            content={noteContent}\r\n            onTitleChange={handleTitle}\r\n            onContentChange={handleContent}\r\n          />\r\n        )}\r\n        <NoteButtons\r\n          onAdd={handleAddBtn}\r\n          onDeleteNew={handleDeleteBtnNew}\r\n          onUpdate={handleUpdateButton}\r\n          onDeleteUpdate={handleDeleteBtnUpdate}\r\n          showAdd={showButtons}\r\n          showUpdate={updateButtons}\r\n        />\r\n      </div>\r\n      <div id=\"notesDashboard\">\r\n        <h1 id=\"notedHeader\"> TO DO </h1>\r\n        <NoteList notes={notes} onSelect={openNote} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,6BAA6B,CAAC;QAC/DT,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,cAAc,CAAC,EAAE,CAAC;IAClBF,YAAY,CAAC,EAAE,CAAC;IAChBR,cAAc,CAAC,IAAI,CAAC;IACpBE,gBAAgB,CAAC,KAAK,CAAC;IACvBE,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMgB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BpB,cAAc,CAAC,KAAK,CAAC;IACrBI,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAEhB,SAAS;MAChBiB,OAAO,EAAEf;IACX,CAAC;IAED,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMxB,KAAK,CAACmC,IAAI,CAAC,6BAA6B,EAAEH,OAAO,CAAC;MACzEhB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAES,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;IAEAjB,cAAc,CAAC,KAAK,CAAC;IACrBI,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMsB,QAAQ,GAAIC,IAAI,IAAK;IACzB3B,cAAc,CAAC,KAAK,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC;IACnBQ,eAAe,CAACe,IAAI,CAAC;IACrBnB,YAAY,CAACmB,IAAI,CAACJ,KAAK,CAAC;IACxBb,cAAc,CAACiB,IAAI,CAACH,OAAO,CAAC;IAC5BtB,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAM0B,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMtC,KAAK,CAACuC,MAAM,CAAC,+BAA+BlB,YAAY,CAACmB,EAAE,EAAE,CAAC,CAAC,CAAC;MACtE,MAAMC,YAAY,GAAG1B,KAAK,CAAC2B,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKnB,YAAY,CAACmB,EAAE,CAAC;MACtExB,QAAQ,CAACyB,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IAEAf,gBAAgB,CAAC,KAAK,CAAC;IACvBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAM6B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,WAAW,GAAG;MAClBX,KAAK,EAAEhB,SAAS;MAChBiB,OAAO,EAAEf;IACX,CAAC;IAED,IAAI;MACF,MAAMnB,KAAK,CAAC6C,KAAK,CAAC,+BAA+BxB,YAAY,CAACmB,EAAE,EAAE,EAAEI,WAAW,CAAC;MAChF,MAAMH,YAAY,GAAG1B,KAAK,CAAC+B,GAAG,CAACT,IAAI,IACjCA,IAAI,CAACG,EAAE,KAAKnB,YAAY,CAACmB,EAAE,GACvB;QAAE,GAAGH,IAAI;QAAEJ,KAAK,EAAEhB,SAAS;QAAEiB,OAAO,EAAEf;MAAY,CAAC,GACnDkB,IACN,CAAC;MACDrB,QAAQ,CAACyB,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IAEAT,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,eAAe,CAAC,IAAI,CAAC;IACrBV,gBAAgB,CAAC,KAAK,CAAC;IACvBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMiC,WAAW,GAAIC,CAAC,IAAK;IACzB9B,YAAY,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,aAAa,GAAIH,CAAC,IAAK;IAC3B5B,cAAc,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACE5C,OAAA;IAAKkC,EAAE,EAAC,UAAU;IAAAY,QAAA,gBAChB9C,OAAA;MAAKkC,EAAE,EAAC,cAAc;MAAAY,QAAA,gBACpB9C,OAAA,CAACH,aAAa;QAACkD,OAAO,EAAExB;MAAiB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3C5C,UAAU,iBACTP,OAAA,CAACL,QAAQ;QACPgC,KAAK,EAAEhB,SAAU;QACjBiB,OAAO,EAAEf,WAAY;QACrBuC,aAAa,EAAEX,WAAY;QAC3BY,eAAe,EAAER;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,eACDnD,OAAA,CAACF,WAAW;QACVwD,KAAK,EAAE7B,YAAa;QACpB8B,WAAW,EAAE/B,kBAAmB;QAChCgC,QAAQ,EAAEnB,kBAAmB;QAC7BoB,cAAc,EAAEzB,qBAAsB;QACtC0B,OAAO,EAAEvD,WAAY;QACrBwD,UAAU,EAAEtD;MAAc;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnD,OAAA;MAAKkC,EAAE,EAAC,gBAAgB;MAAAY,QAAA,gBACtB9C,OAAA;QAAIkC,EAAE,EAAC,aAAa;QAAAY,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCnD,OAAA,CAACJ,QAAQ;QAACa,KAAK,EAAEA,KAAM;QAACmD,QAAQ,EAAE9B;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CAtIQD,IAAI;AAAA4D,EAAA,GAAJ5D,IAAI;AAwIb,eAAeA,IAAI;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}